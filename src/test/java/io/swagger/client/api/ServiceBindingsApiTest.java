/*
 * Open Service Broker API
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * OpenAPI spec version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AsyncOperation;
import io.swagger.client.model.Error;
import io.swagger.client.model.LastOperationResource;
import io.swagger.client.model.ServiceBindingRequest;
import io.swagger.client.model.ServiceBindingResource;
import io.swagger.client.model.ServiceBindingResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ServiceBindingsApi
 */
@Ignore
public class ServiceBindingsApiTest {

    private final ServiceBindingsApi api = new ServiceBindingsApi();

    /**
     * generate a service binding
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void serviceBindingBindingTest() throws Exception {
        ServiceBindingRequest body = null;
        String xBrokerAPIVersion = null;
        String instanceId = null;
        String bindingId = null;
        String xBrokerAPIOriginatingIdentity = null;
        Boolean acceptsIncomplete = null;
        ServiceBindingResponse response = api.serviceBindingBinding(body, xBrokerAPIVersion, instanceId, bindingId, xBrokerAPIOriginatingIdentity, acceptsIncomplete);

        // TODO: test validations
    }
    /**
     * get a service binding
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void serviceBindingGetTest() throws Exception {
        String xBrokerAPIVersion = null;
        String instanceId = null;
        String bindingId = null;
        String xBrokerAPIOriginatingIdentity = null;
        String serviceId = null;
        String planId = null;
        ServiceBindingResource response = api.serviceBindingGet(xBrokerAPIVersion, instanceId, bindingId, xBrokerAPIOriginatingIdentity, serviceId, planId);

        // TODO: test validations
    }
    /**
     * get the last requested operation state for service binding
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void serviceBindingLastOperationGetTest() throws Exception {
        String xBrokerAPIVersion = null;
        String instanceId = null;
        String bindingId = null;
        String serviceId = null;
        String planId = null;
        String operation = null;
        LastOperationResource response = api.serviceBindingLastOperationGet(xBrokerAPIVersion, instanceId, bindingId, serviceId, planId, operation);

        // TODO: test validations
    }
    /**
     * deprovision a service binding
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void serviceBindingUnbindingTest() throws Exception {
        String xBrokerAPIVersion = null;
        String instanceId = null;
        String bindingId = null;
        String serviceId = null;
        String planId = null;
        String xBrokerAPIOriginatingIdentity = null;
        Boolean acceptsIncomplete = null;
        Object response = api.serviceBindingUnbinding(xBrokerAPIVersion, instanceId, bindingId, serviceId, planId, xBrokerAPIOriginatingIdentity, acceptsIncomplete);

        // TODO: test validations
    }
}
